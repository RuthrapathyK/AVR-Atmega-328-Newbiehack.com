
Game with buttons and LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000224  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007f4  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000698  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d8  00000000  00000000  00001110  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000014e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c1  00000000  00000000  0000150c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001f2  00000000  00000000  000018cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001abf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 ce 00 	jmp	0x19c	; 0x19c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
  DDRB&=~(1<<DDD4);	//button pin input
  80:	24 98       	cbi	0x04, 4	; 4
  DDRD&=~(1<<DDD7);
  82:	57 98       	cbi	0x0a, 7	; 10
  
  PORTB|=(1<<DDD4); //pull up input pin
  84:	2c 9a       	sbi	0x05, 4	; 5
  PORTD|=(1<<DDD7);
  86:	5f 9a       	sbi	0x0b, 7	; 11
  
  DDRD|=(1<<DDD5);
  88:	55 9a       	sbi	0x0a, 5	; 10
  DDRD|=(1<<DDD6);
  8a:	56 9a       	sbi	0x0a, 6	; 10
  DDRD|=(1<<DDD7);//LED pins output
  8c:	57 9a       	sbi	0x0a, 7	; 10
  DDRB|=(1<<DDB0);
  8e:	20 9a       	sbi	0x04, 0	; 4
  DDRB|=(1<<DDB1);
  90:	21 9a       	sbi	0x04, 1	; 4
  DDRB|=(1<<DDB3);
  92:	23 9a       	sbi	0x04, 3	; 4
  unsigned int LED_set_1=0;
  unsigned int LED_set_2=0;
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	30 e0       	ldi	r19, 0x00	; 0
  DDRD|=(1<<DDD6);
  DDRD|=(1<<DDD7);//LED pins output
  DDRB|=(1<<DDB0);
  DDRB|=(1<<DDB1);
  DDRB|=(1<<DDB3);
  unsigned int LED_set_1=0;
  98:	40 e0       	ldi	r20, 0x00	; 0
  9a:	50 e0       	ldi	r21, 0x00	; 0
  unsigned int LED_set_2=0;
    while (1) 
    {
		if((PINB>>4)==0)      /*button 1 pressed */
  9c:	83 b1       	in	r24, 0x03	; 3
  9e:	82 95       	swap	r24
  a0:	8f 70       	andi	r24, 0x0F	; 15
  a2:	e1 f5       	brne	.+120    	; 0x11c <main+0x9c>
		{
		 while(1)
		  {
			if((PINB>>4)==1)
  a4:	83 b1       	in	r24, 0x03	; 3
  a6:	82 95       	swap	r24
  a8:	8f 70       	andi	r24, 0x0F	; 15
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	d9 f7       	brne	.-10     	; 0xa4 <main+0x24>
			{
				LED_set_1++;
  ae:	4f 5f       	subi	r20, 0xFF	; 255
  b0:	5f 4f       	sbci	r21, 0xFF	; 255
				switch (LED_set_1)
  b2:	42 30       	cpi	r20, 0x02	; 2
  b4:	51 05       	cpc	r21, r1
  b6:	71 f0       	breq	.+28     	; 0xd4 <main+0x54>
  b8:	20 f4       	brcc	.+8      	; 0xc2 <main+0x42>
  ba:	41 30       	cpi	r20, 0x01	; 1
  bc:	51 05       	cpc	r21, r1
  be:	41 f0       	breq	.+16     	; 0xd0 <main+0x50>
  c0:	2d c0       	rjmp	.+90     	; 0x11c <main+0x9c>
  c2:	43 30       	cpi	r20, 0x03	; 3
  c4:	51 05       	cpc	r21, r1
  c6:	41 f0       	breq	.+16     	; 0xd8 <main+0x58>
  c8:	44 30       	cpi	r20, 0x04	; 4
  ca:	51 05       	cpc	r21, r1
  cc:	39 f0       	breq	.+14     	; 0xdc <main+0x5c>
  ce:	26 c0       	rjmp	.+76     	; 0x11c <main+0x9c>
				{
					case 1:
					PORTD|=(1<<5);
  d0:	5d 9a       	sbi	0x0b, 5	; 11
					break;
  d2:	24 c0       	rjmp	.+72     	; 0x11c <main+0x9c>
					case 2:
					PORTD|=(1<<6);
  d4:	5e 9a       	sbi	0x0b, 6	; 11
					break;
  d6:	22 c0       	rjmp	.+68     	; 0x11c <main+0x9c>
					case 3:
					PORTD|=(1<<7);
  d8:	5f 9a       	sbi	0x0b, 7	; 11
					break;
  da:	20 c0       	rjmp	.+64     	; 0x11c <main+0x9c>
		 while(1)
		  {
			if((PINB>>4)==1)
			{
				LED_set_1++;
				switch (LED_set_1)
  dc:	86 e0       	ldi	r24, 0x06	; 6
  de:	90 e0       	ldi	r25, 0x00	; 0
					PORTD|=(1<<7);
					break;
					case 4:
					for(int i=0;i<=5;i++)
					{
						PORTD|=(1<<5);					//increment led pin
  e0:	5d 9a       	sbi	0x0b, 5	; 11
						PORTD|=(1<<6);
  e2:	5e 9a       	sbi	0x0b, 6	; 11
						PORTD|=(1<<7);
  e4:	5f 9a       	sbi	0x0b, 7	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e6:	2f e3       	ldi	r18, 0x3F	; 63
  e8:	32 e4       	ldi	r19, 0x42	; 66
  ea:	4f e0       	ldi	r20, 0x0F	; 15
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	30 40       	sbci	r19, 0x00	; 0
  f0:	40 40       	sbci	r20, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x6c>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x76>
  f6:	00 00       	nop
						_delay_ms(5000);
						PORTD&=~(1<<5);
  f8:	5d 98       	cbi	0x0b, 5	; 11
						PORTD&=~(1<<6);
  fa:	5e 98       	cbi	0x0b, 6	; 11
						PORTD&=~(1<<7);
  fc:	5f 98       	cbi	0x0b, 7	; 11
  fe:	2f e3       	ldi	r18, 0x3F	; 63
 100:	32 e4       	ldi	r19, 0x42	; 66
 102:	4f e0       	ldi	r20, 0x0F	; 15
 104:	21 50       	subi	r18, 0x01	; 1
 106:	30 40       	sbci	r19, 0x00	; 0
 108:	40 40       	sbci	r20, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x84>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x8e>
 10e:	00 00       	nop
 110:	01 97       	sbiw	r24, 0x01	; 1
					break;
					case 3:
					PORTD|=(1<<7);
					break;
					case 4:
					for(int i=0;i<=5;i++)
 112:	31 f7       	brne	.-52     	; 0xe0 <main+0x60>
						PORTD&=~(1<<7);
						_delay_ms(5000);
						
					}
					LED_set_1=0;
					LED_set_2=0;
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	30 e0       	ldi	r19, 0x00	; 0
						PORTD&=~(1<<6);
						PORTD&=~(1<<7);
						_delay_ms(5000);
						
					}
					LED_set_1=0;
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	50 e0       	ldi	r21, 0x00	; 0
				}
				break;
			}
		}
	}
		if((PIND>>DDD7)==0)/*button 2 pressed */
 11c:	4f 99       	sbic	0x09, 7	; 9
 11e:	be cf       	rjmp	.-132    	; 0x9c <main+0x1c>
		{
				while(1)
				{
					if((PIND>>DDD3)==1)
 120:	89 b1       	in	r24, 0x09	; 9
 122:	86 95       	lsr	r24
 124:	86 95       	lsr	r24
 126:	86 95       	lsr	r24
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	d1 f7       	brne	.-12     	; 0x120 <main+0xa0>
					{
						LED_set_2++;
 12c:	2f 5f       	subi	r18, 0xFF	; 255
 12e:	3f 4f       	sbci	r19, 0xFF	; 255
						switch (LED_set_2)
 130:	22 30       	cpi	r18, 0x02	; 2
 132:	31 05       	cpc	r19, r1
 134:	71 f0       	breq	.+28     	; 0x152 <main+0xd2>
 136:	20 f4       	brcc	.+8      	; 0x140 <main+0xc0>
 138:	21 30       	cpi	r18, 0x01	; 1
 13a:	31 05       	cpc	r19, r1
 13c:	41 f0       	breq	.+16     	; 0x14e <main+0xce>
 13e:	ae cf       	rjmp	.-164    	; 0x9c <main+0x1c>
 140:	23 30       	cpi	r18, 0x03	; 3
 142:	31 05       	cpc	r19, r1
 144:	41 f0       	breq	.+16     	; 0x156 <main+0xd6>
 146:	24 30       	cpi	r18, 0x04	; 4
 148:	31 05       	cpc	r19, r1
 14a:	39 f0       	breq	.+14     	; 0x15a <main+0xda>
 14c:	a7 cf       	rjmp	.-178    	; 0x9c <main+0x1c>
						{
							case 1:
							PORTB|=(1<<3);
 14e:	2b 9a       	sbi	0x05, 3	; 5
							break;
 150:	a5 cf       	rjmp	.-182    	; 0x9c <main+0x1c>
							case 2:
							PORTB|=(1<<1);
 152:	29 9a       	sbi	0x05, 1	; 5
							break;
 154:	a3 cf       	rjmp	.-186    	; 0x9c <main+0x1c>
							case 3:
							PORTB|=(1<<0);
 156:	28 9a       	sbi	0x05, 0	; 5
							break;
 158:	a1 cf       	rjmp	.-190    	; 0x9c <main+0x1c>
				while(1)
				{
					if((PIND>>DDD3)==1)
					{
						LED_set_2++;
						switch (LED_set_2)
 15a:	86 e0       	ldi	r24, 0x06	; 6
 15c:	90 e0       	ldi	r25, 0x00	; 0
							PORTB|=(1<<0);
							break;
							case 4:
							for(int i=0;i<=5;i++)
							{		
								PORTB|=(1<<3);					//increment led pin
 15e:	2b 9a       	sbi	0x05, 3	; 5
								PORTB|=(1<<1);
 160:	29 9a       	sbi	0x05, 1	; 5
								PORTB|=(1<<0);
 162:	28 9a       	sbi	0x05, 0	; 5
 164:	2f e3       	ldi	r18, 0x3F	; 63
 166:	32 e4       	ldi	r19, 0x42	; 66
 168:	4f e0       	ldi	r20, 0x0F	; 15
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	30 40       	sbci	r19, 0x00	; 0
 16e:	40 40       	sbci	r20, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <main+0xea>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0xf4>
 174:	00 00       	nop
								_delay_ms(5000);
								PORTB&=~(1<<3);
 176:	2b 98       	cbi	0x05, 3	; 5
								PORTB&=~(1<<1);
 178:	29 98       	cbi	0x05, 1	; 5
								PORTB&=~(1<<0);
 17a:	28 98       	cbi	0x05, 0	; 5
 17c:	2f e3       	ldi	r18, 0x3F	; 63
 17e:	32 e4       	ldi	r19, 0x42	; 66
 180:	4f e0       	ldi	r20, 0x0F	; 15
 182:	21 50       	subi	r18, 0x01	; 1
 184:	30 40       	sbci	r19, 0x00	; 0
 186:	40 40       	sbci	r20, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x102>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x10c>
 18c:	00 00       	nop
 18e:	01 97       	sbiw	r24, 0x01	; 1
							break;
							case 3:
							PORTB|=(1<<0);
							break;
							case 4:
							for(int i=0;i<=5;i++)
 190:	31 f7       	brne	.-52     	; 0x15e <main+0xde>
								PORTB&=~(1<<0);
								_delay_ms(5000);
						
							}
							LED_set_1=0;
							LED_set_2=0;
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
								PORTB&=~(1<<1);
								PORTB&=~(1<<0);
								_delay_ms(5000);
						
							}
							LED_set_1=0;
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	50 e0       	ldi	r21, 0x00	; 0
 19a:	80 cf       	rjmp	.-256    	; 0x9c <main+0x1c>

0000019c <_exit>:
 19c:	f8 94       	cli

0000019e <__stop_program>:
 19e:	ff cf       	rjmp	.-2      	; 0x19e <__stop_program>
