
Game on Buttons 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000248  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000842  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006b6  00000000  00000000  00000b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000040f  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000015f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c3  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000018a  00000000  00000000  000019f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001b81  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <main>
  88:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <button_1>:
    }
}

void button_1()
{
	LED_set_1++;
  90:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <LED_set_1>
  94:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <LED_set_1+0x1>
  98:	01 96       	adiw	r24, 0x01	; 1
  9a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <LED_set_1+0x1>
  9e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <LED_set_1>
	switch (LED_set_1)
  a2:	82 30       	cpi	r24, 0x02	; 2
  a4:	91 05       	cpc	r25, r1
  a6:	61 f0       	breq	.+24     	; 0xc0 <button_1+0x30>
  a8:	1c f4       	brge	.+6      	; 0xb0 <button_1+0x20>
  aa:	01 97       	sbiw	r24, 0x01	; 1
  ac:	39 f0       	breq	.+14     	; 0xbc <button_1+0x2c>
  ae:	08 95       	ret
  b0:	83 30       	cpi	r24, 0x03	; 3
  b2:	91 05       	cpc	r25, r1
  b4:	39 f0       	breq	.+14     	; 0xc4 <button_1+0x34>
  b6:	04 97       	sbiw	r24, 0x04	; 4
  b8:	39 f0       	breq	.+14     	; 0xc8 <button_1+0x38>
  ba:	08 95       	ret
	{
	case 1:
		PORTB|=(1<<0);
  bc:	28 9a       	sbi	0x05, 0	; 5
		break;
  be:	08 95       	ret
	case 2:
		PORTB|=(1<<1);
  c0:	29 9a       	sbi	0x05, 1	; 5
		break;
  c2:	08 95       	ret
	case  3:
		PORTB|=(1<<2);
  c4:	2a 9a       	sbi	0x05, 2	; 5
		break;
  c6:	08 95       	ret
}

void button_1()
{
	LED_set_1++;
	switch (LED_set_1)
  c8:	84 e0       	ldi	r24, 0x04	; 4
  ca:	90 e0       	ldi	r25, 0x00	; 0
		PORTB|=(1<<2);
		break;
	case 4:
	for(int i=0;i<4;i++)
	{
		PORTB|=(1<<0);
  cc:	28 9a       	sbi	0x05, 0	; 5
		PORTB|=(1<<1);
  ce:	29 9a       	sbi	0x05, 1	; 5
		PORTB|=(1<<2);
  d0:	2a 9a       	sbi	0x05, 2	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	2f e3       	ldi	r18, 0x3F	; 63
  d4:	32 e4       	ldi	r19, 0x42	; 66
  d6:	4f e0       	ldi	r20, 0x0F	; 15
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	30 40       	sbci	r19, 0x00	; 0
  dc:	40 40       	sbci	r20, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <button_1+0x48>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <button_1+0x52>
  e2:	00 00       	nop
		_delay_ms(5000);
		PORTB&=~(1<<0);
  e4:	28 98       	cbi	0x05, 0	; 5
		PORTB&=~(1<<1);
  e6:	29 98       	cbi	0x05, 1	; 5
		PORTB&=~(1<<2);
  e8:	2a 98       	cbi	0x05, 2	; 5
  ea:	2f e3       	ldi	r18, 0x3F	; 63
  ec:	32 e4       	ldi	r19, 0x42	; 66
  ee:	4f e0       	ldi	r20, 0x0F	; 15
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	30 40       	sbci	r19, 0x00	; 0
  f4:	40 40       	sbci	r20, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <button_1+0x60>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <button_1+0x6a>
  fa:	00 00       	nop
		_delay_ms(5000);
		LED_set_1=0;
  fc:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <LED_set_1+0x1>
 100:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <LED_set_1>
		LED_set_2=0;
 104:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 108:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 10c:	01 97       	sbiw	r24, 0x01	; 1
		break;
	case  3:
		PORTB|=(1<<2);
		break;
	case 4:
	for(int i=0;i<4;i++)
 10e:	f1 f6       	brne	.-68     	; 0xcc <button_1+0x3c>
		PORTB&=~(1<<2);
		_delay_ms(5000);
		LED_set_1=0;
		LED_set_2=0;
	}
	     PORTD&=~(1<<3);
 110:	5b 98       	cbi	0x0b, 3	; 11
	     PORTD&=~(1<<4);
 112:	5c 98       	cbi	0x0b, 4	; 11
	     PORTD&=~(1<<5);
 114:	5d 98       	cbi	0x0b, 5	; 11
 116:	08 95       	ret

00000118 <button_2>:
		 break;
	}
}
void button_2()
{
	LED_set_2++;
 118:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 11c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 120:	01 96       	adiw	r24, 0x01	; 1
 122:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 126:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	switch (LED_set_2)
 12a:	82 30       	cpi	r24, 0x02	; 2
 12c:	91 05       	cpc	r25, r1
 12e:	61 f0       	breq	.+24     	; 0x148 <button_2+0x30>
 130:	1c f4       	brge	.+6      	; 0x138 <button_2+0x20>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	39 f0       	breq	.+14     	; 0x144 <button_2+0x2c>
 136:	08 95       	ret
 138:	83 30       	cpi	r24, 0x03	; 3
 13a:	91 05       	cpc	r25, r1
 13c:	39 f0       	breq	.+14     	; 0x14c <button_2+0x34>
 13e:	04 97       	sbiw	r24, 0x04	; 4
 140:	39 f0       	breq	.+14     	; 0x150 <button_2+0x38>
 142:	08 95       	ret
	{
		case 1:
		PORTD|=(1<<3);
 144:	5b 9a       	sbi	0x0b, 3	; 11
		break;
 146:	08 95       	ret
		case 2:
		PORTD|=(1<<4);
 148:	5c 9a       	sbi	0x0b, 4	; 11
		break;
 14a:	08 95       	ret
		case  3:
		PORTD|=(1<<5);
 14c:	5d 9a       	sbi	0x0b, 5	; 11
		break;
 14e:	08 95       	ret
	}
}
void button_2()
{
	LED_set_2++;
	switch (LED_set_2)
 150:	84 e0       	ldi	r24, 0x04	; 4
 152:	90 e0       	ldi	r25, 0x00	; 0
		PORTD|=(1<<5);
		break;
		case 4:
		for(int i=0;i<4;i++)
		{
			PORTD|=(1<<3);
 154:	5b 9a       	sbi	0x0b, 3	; 11
			PORTD|=(1<<4);
 156:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD|=(1<<5);
 158:	5d 9a       	sbi	0x0b, 5	; 11
 15a:	2f e3       	ldi	r18, 0x3F	; 63
 15c:	32 e4       	ldi	r19, 0x42	; 66
 15e:	4f e0       	ldi	r20, 0x0F	; 15
 160:	21 50       	subi	r18, 0x01	; 1
 162:	30 40       	sbci	r19, 0x00	; 0
 164:	40 40       	sbci	r20, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <button_2+0x48>
 168:	00 c0       	rjmp	.+0      	; 0x16a <button_2+0x52>
 16a:	00 00       	nop
			_delay_ms(5000);
			PORTD&=~(1<<3);
 16c:	5b 98       	cbi	0x0b, 3	; 11
			PORTD&=~(1<<4);
 16e:	5c 98       	cbi	0x0b, 4	; 11
			PORTD&=~(1<<5);
 170:	5d 98       	cbi	0x0b, 5	; 11
 172:	2f e3       	ldi	r18, 0x3F	; 63
 174:	32 e4       	ldi	r19, 0x42	; 66
 176:	4f e0       	ldi	r20, 0x0F	; 15
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	30 40       	sbci	r19, 0x00	; 0
 17c:	40 40       	sbci	r20, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <button_2+0x60>
 180:	00 c0       	rjmp	.+0      	; 0x182 <button_2+0x6a>
 182:	00 00       	nop
			_delay_ms(5000);
			LED_set_1=0;
 184:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <LED_set_1+0x1>
 188:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <LED_set_1>
			LED_set_2=0;
 18c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 190:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 194:	01 97       	sbiw	r24, 0x01	; 1
		break;
		case  3:
		PORTD|=(1<<5);
		break;
		case 4:
		for(int i=0;i<4;i++)
 196:	f1 f6       	brne	.-68     	; 0x154 <button_2+0x3c>
			PORTD&=~(1<<5);
			_delay_ms(5000);
			LED_set_1=0;
			LED_set_2=0;
		}
		    PORTB&=~(1<<0);
 198:	28 98       	cbi	0x05, 0	; 5
		    PORTB&=~(1<<1);
 19a:	29 98       	cbi	0x05, 1	; 5
		    PORTB&=~(1<<2);
 19c:	2a 98       	cbi	0x05, 2	; 5
 19e:	08 95       	ret

000001a0 <main>:
void button_2(void);
int LED_set_1=0;
int LED_set_2=0;
int main(void)
{
   DDRB=0b11101111;//PORT B making as LED as output
 1a0:	8f ee       	ldi	r24, 0xEF	; 239
 1a2:	84 b9       	out	0x04, r24	; 4
   
   PORTB|=(1<<PORTB4);//PORTB making button 1 as input and making pull up
 1a4:	2c 9a       	sbi	0x05, 4	; 5
   
   DDRD=0b01111111;//PORT D making LED as output
 1a6:	8f e7       	ldi	r24, 0x7F	; 127
 1a8:	8a b9       	out	0x0a, r24	; 10
   
   PORTD|=(1<<PORTD7);//PORT D making button 2 as input and making pull up
 1aa:	5f 9a       	sbi	0x0b, 7	; 11

	while (1) 
    {
		if((PINB>>4)==0)
 1ac:	83 b1       	in	r24, 0x03	; 3
 1ae:	82 95       	swap	r24
 1b0:	8f 70       	andi	r24, 0x0F	; 15
 1b2:	39 f4       	brne	.+14     	; 0x1c2 <main+0x22>
		{
			while(1)
			{
				if((PINB>>4)==1)
 1b4:	83 b1       	in	r24, 0x03	; 3
 1b6:	82 95       	swap	r24
 1b8:	8f 70       	andi	r24, 0x0F	; 15
 1ba:	81 30       	cpi	r24, 0x01	; 1
 1bc:	d9 f7       	brne	.-10     	; 0x1b4 <main+0x14>
				{
				button_1();
 1be:	0e 94 48 00 	call	0x90	; 0x90 <button_1>
				}
				//button 1 function
			}
			
		}
	 if((PIND>>7)==0)
 1c2:	4f 99       	sbic	0x09, 7	; 9
 1c4:	f3 cf       	rjmp	.-26     	; 0x1ac <main+0xc>
		{
			while(1)
			{
				if((PIND>>7)==1)
 1c6:	4f 9b       	sbis	0x09, 7	; 9
 1c8:	fe cf       	rjmp	.-4      	; 0x1c6 <main+0x26>
				{
				button_2();
 1ca:	0e 94 8c 00 	call	0x118	; 0x118 <button_2>
				break;//button 2 fuctions	
 1ce:	ee cf       	rjmp	.-36     	; 0x1ac <main+0xc>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>
